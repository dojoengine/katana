name: ci

on:
  push:
    branches:
      - main
  pull_request:

# Cancel in progress workflow when a new one is triggered by running in a concurrency group
# https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/control-the-concurrency-of-workflows-and-jobs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_VERSION: 1.85.0

jobs:
  fmt:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/dojoengine/katana-dev:latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - run: scripts/rust_fmt.sh --check

  generate-test-artifacts:
    needs: [fmt]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/dojoengine/katana-dev:latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      # Workaround for https://github.com/actions/runner-images/issues/6775
      - run: git config --global --add safe.directory "*"

      - name: Check if test artifacts need to be generated
        id: check-files
        run: |
          if [[ $(git diff --name-only HEAD^ | grep -q "^tests/snos/snos/") ]]; then
            echo "files_changed=true" >> $GITHUB_OUTPUT
          else
            echo "files_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Try to restore cached test artifacts
        id: cache
        uses: actions/cache@v3
        with:
          lookup-only: true
          path: |
            ./tests/snos/snos/build
          key: snos-test-artifacts

      - name: Generate test artifacts
        if: steps.check-files.outputs.files_changed == 'true' || steps.cache.outputs.cache-hit != 'true'
        run: make test-artifacts

      - name: Cache test artifacts
        if: steps.check-files.outputs.files_changed == 'true' || steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: |
            ./tests/snos/snos/build
          key: snos-test-artifacts

  clippy:
    needs: [generate-test-artifacts]
    runs-on: ubuntu-latest-4-cores
    container:
      image: ghcr.io/dojoengine/katana-dev:latest
    env:
      MLIR_SYS_190_PREFIX: /usr/lib/llvm-19/
      LLVM_SYS_191_PREFIX: /usr/lib/llvm-19/
      TABLEGEN_190_PREFIX: /usr/lib/llvm-19/
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      # Workaround for https://github.com/actions/runner-images/issues/6775
      - run: git config --global --add safe.directory "*"

      - uses: Swatinem/rust-cache@v2

      - name: Restore test artifacts
        uses: actions/cache@v3
        with:
          path: |
            ./tests/snos/snos/build
          key: snos-test-artifacts

      - name: Run Clippy
        run: ./scripts/clippy.sh

  test:
    needs: [fmt, clippy]
    runs-on: ubuntu-latest-32-cores
    container:
      image: ghcr.io/dojoengine/katana-dev:latest
    env:
      MLIR_SYS_190_PREFIX: /usr/lib/llvm-19/
      LLVM_SYS_191_PREFIX: /usr/lib/llvm-19/
      TABLEGEN_190_PREFIX: /usr/lib/llvm-19/
      NEXTEST_PROFILE: ci
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      # Workaround for https://github.com/actions/runner-images/issues/6775
      - run: git config --global --add safe.directory "*"

      - uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: |
          cargo llvm-cov nextest --no-report --all-features --workspace --exclude snos-integration-test --build-jobs 20
          cargo llvm-cov report --lcov --output-path lcov.info

      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info

  snos-integration-test:
    needs: [fmt, clippy]
    runs-on: ubuntu-latest-32-cores
    container:
      image: ghcr.io/dojoengine/katana-dev:latest
    env:
      MLIR_SYS_190_PREFIX: /usr/lib/llvm-19/
      LLVM_SYS_191_PREFIX: /usr/lib/llvm-19/
      TABLEGEN_190_PREFIX: /usr/lib/llvm-19/
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      # Workaround for https://github.com/actions/runner-images/issues/6775
      - run: git config --global --add safe.directory "*"

      - uses: Swatinem/rust-cache@v2

      - name: Restore test artifacts from clippy job
        id: restore-test-artifacts
        uses: actions/cache@v3
        with:
          path: |
            ./tests/snos/snos/build
          key: snos-test-artifacts

      - name: Prepare SNOS test environment
        run: |
          if [ ! -d "./tests/snos/snos/build" ]; then
            make snos-artifacts
          fi

      - run: |
          cargo run -p snos-integration-test

  explorer-reverse-proxy:
    needs: [fmt, clippy]
    runs-on: ubuntu-latest-32-cores
    container:
      image: ghcr.io/dojoengine/katana-dev:latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      # Workaround for https://github.com/actions/runner-images/issues/6775
      - run: git config --global --add safe.directory "*"
      - uses: Swatinem/rust-cache@v2
      - uses: browser-actions/setup-chrome@v1
      - run: |
          apt install -y libnss3-dev libxss1
      - run: |
          cargo run -p reverse-proxy-test
