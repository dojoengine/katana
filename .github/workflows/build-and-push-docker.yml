name: build and push workflow base image

on:
  workflow_dispatch:
    inputs:
      docker_tag:
        description: Descriptive name of the devcontainer for the Docker tag
        required: true
        type: string
  push:
    branches:
      - main
    paths:
      - ".github/Dockerfile"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.docker_tag.outputs.tag_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set Docker tag
        id: docker_tag
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            SHORT_SHA=$(echo "${{ github.sha }}" | cut -c 1-7)
            echo "tag_name=$SHORT_SHA" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" == "release" ]; then
            echo "tag_name=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "tag_name=${{ inputs.docker_tag }}" >> $GITHUB_OUTPUT
          fi

  build-and-push-amd64:
    runs-on: ubuntu-latest-8-cores
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - uses: Swatinem/rust-cache@v2
        with:
          key: docker
          shared-key: katana-docker-cache

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image for amd64
        uses: docker/build-push-action@v2
        with:
          push: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'release' && startsWith(github.ref, 'refs/tags/')) || github.event_name == 'workflow_dispatch' }}
          file: .github/Dockerfile
          tags: ghcr.io/${{ github.repository }}-dev:${{ needs.setup.outputs.tag_name }}-amd64,ghcr.io/${{ github.repository }}-dev:latest-amd64
          build-args: |
            RUST_VERSION=1.85.0
            CLIPPY_VERSION=nightly-2025-02-20
          platforms: linux/amd64
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}-dev:latest-amd64

  build-and-push-arm64:
    runs-on: ubuntu-latest-8-cores-arm64
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - uses: Swatinem/rust-cache@v2
        with:
          key: docker
          shared-key: katana-docker-cache

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image for arm64
        uses: docker/build-push-action@v2
        with:
          push: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'release' && startsWith(github.ref, 'refs/tags/')) || github.event_name == 'workflow_dispatch' }}
          file: .github/Dockerfile
          tags: ghcr.io/${{ github.repository }}-dev:${{ needs.setup.outputs.tag_name }}-arm64,ghcr.io/${{ github.repository }}-dev:latest-arm64 
          build-args: |
            RUST_VERSION=1.85.0
            CLIPPY_VERSION=nightly-2025-02-20
          platforms: linux/arm64
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}-dev:latest-arm64

  create-multiplatform-manifest:
    runs-on: ubuntu-latest
    needs: [setup, build-and-push-amd64, build-and-push-arm64]
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push Docker manifest
        uses: Noelware/docker-manifest-action@1.0.0-beta.2
        with:
          inputs: ghcr.io/${{ github.repository }}-dev:${{ needs.setup.outputs.tag_name }}-amd64,ghcr.io/${{ github.repository }}-dev:${{ needs.setup.outputs.tag_name }}-arm64
          tags: ghcr.io/${{ github.repository }}-dev:latest,ghcr.io/${{ github.repository }}-dev:${{ needs.setup.outputs.tag_name }}
